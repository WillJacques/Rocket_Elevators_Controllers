
DEFINE Column USING id, totalfloor_quantity, lowFloor, highFloor and elevator_amount
    column_ID: id,
    column_Online: TRUE,
    elevator_amount: elevator_amount,
    lowFloor : lowFloor
    highFloor : highFloor
    queue_FloorRequestUP : [EMPTY ARRAY],
    queue_FloorRequestDOWN : [EMPTY ARRAY],
    maximumFloorNumber : totalfloor_quantity,
    powered : TRUE,
    preferedFloor : 1,
    clock : Actual_Time,

    SEQUENCE "setpreferedFloor" USING clock
        IF clock > 7.5 and < 8.5 THEN
            SET preferedfloor to highFloor
        ELSE IF clock > 12.5 and < 13.5 THEN
            SET preferedfloor to highFloor
        ELSE THEN
            SET preferedFloor to 1
        ENDIF
    ENDSEQUENCE

    Column CALL "setpreferedFloor"

    DEFINE Elevator USING id,
    ID: id,
    direction : [UP, DOWN, IDLE, SERVICE, MAINTENANCE],
    buttonNumber : [1],
    currentFloor : [1],
    goingToFloor : [],
    queueToFloor : [],
    pendingQueue : [],
    weightMesure : [] 'kg',
    weightCapacity : 2000 'Kg',
    elevatorDoorClose : TRUE,
    elevatorDoorOpen : FALSE,
    emergencyButtonPushed : FALSE,
    elevator_Online : TRUE,

        SEQUENCE "createbuttonNumberList" USING Column.lowFloor and Column.highFloor
        FOR i = Column.lowFloor WHILE i <= Column.highFloor, 
            IF i > 1 or i < 0
                ADD i to buttonNumber array
            ENDIF
            increment i
        ENDFOR
        ENDSEQUENCE

        Elevator CALL "createbuttonNumberlist"
    
        SEQUENCE "verifyWeight" USING weightMesure and weightCapacity
            WHILE weightMesure > weightCapacity THEN
                SET elevator_Online TO FALSE THEN
                Display message : "You are exceeding weight capacity"
            ENDWHILE
            SET elevator_Online TO TRUE
        ENDSEQUENCE

        SEQUENCE "operate" USING goingToFloor
            IF Column SEQUENCE "delegate" New Floors THEN  
                IF Elevator.direction = "UP" THEN
                    ADD Column.newFloor to Elevator.queueToFloor THEN
                    SORT Ascending Elevator.queueToFloor[] THEN
                    Elevator.goingToFloor becomes first number in Elevator.queueToFloor[]
                ELSE IF Elevator.direction = "DOWN" THEN
                    ADD Column.newFloor to Elevator.queueToFloor THEN
                    SORT Descending Elevator.queueToFloor[] THEN
                    Elevator.goingToFloor = First number in Elevator.queueToFloor[]
                ENDIF
            ENDIF
            WHILE Elevator.currentFloor NOT EQUAL Elevator.goingToFloor THEN
                IF Elevator.direction == "UP" THEN
                    Elevator.currentFloor + 1 
                ELSE IF Elevator.direction == "DOWN" THEN
                    Elevator.currentFloor - 1
                ENDIF
            ENDWHILE

            Elevator.goingToFloor = [empty]
            Elevator.queueToFloor = remove first number in Elevator.queueToFloor
            
            Elevator.openDoor()
            WAIT 4 seconds 'door opening'

            Elevator.direction = "IDLE"
            WAIT 7 seconds 'with open door'

            Listen to Elevator.ButtonNumber THEN 'Waiting for user to press floor buttons inside elevator'
                        
            IF Elevator.direction = "UP" THEN
                IF Elevator.ButtonNumber > Elevator.currentFloor THEN
                    ADD Elevator.ButtonNumber to Elevator.queueToFloor THEN
                    SORT Ascending Elevator.queueToFloor[] THEN
                ENDIF
                ELSE IF Elevator.ButtonNumber < Elevator.currentFloor THEN
                    ADD Elevator.ButtonNumber to Elevator.pendingQueue 'the user board on the opposite side wanted'
                ENDIF
            ENDIF

            ELSE IF Elevator.direction = "DOWN" THEN
                    IF Elevator.ButtonNumber < Elevator.currentFloor THEN
                    ADD Elevator.ButtonNumber to Elevator.queueToFloor THEN
                    SORT Descending Elevator.queueToFloor[] THEN
                ENDIF
                ELSE IF Elevator.ButtonNumber > Elevator.currentFloor THEN
                    ADD Elevator.ButtonNumber to Elevator.pendingQueue 'the user board on the opposite side wanted'
                ENDIF
            ENDIF

            Elevator.goingToFloor = Extract the next number FROM Elevator.queueToFloor

            Elevator.closeDoor();
            WAIT 4 seconds 'door closing'
            CALL "verifyWeight"

            IF Elevator.goingToFloor NOT EMPTY THEN
                RESTART SEQUENCE "operate"
            ELSE IF Elevator.goingToFloor is EMPTY AND Elevator.pendingQueue is NOT EMPTY THEN
                Elevator.QueueToFloor = Elevator.pendingQueue
                    IF Elevator.direction = "UP" THEN
                        Elevator.direction = "DOWN"
                        SORT Descending Elevator.queueToFloor[]
                    ELSE IF Elevator.direction = "DOWN" THEN
                        Elevator.direction = "UP"
                        SORT Ascending Elevator.queueToFloor[]
                    ENDIF
                Elevator.goingToFloor = NEXT Elevator.queueToFloor
                RESTART SEQUENCE "operate"
            ELSE IF Elevator.QueueToFloor is EMPTY AND Elevator.pendingQueue is EMPTY THEN
                FOR 30 seconds Elevator.direction = "IDLE" THEN
                    WAIT Column SEQUENCE "delegate" New Floors to Elevator.goingToFloor
                ENDFOR THEN 
                Elevator.goingToFloor = Column.preferedFloor
                IF Elevator.goingToFloor < Elevator.currentFloor
                    Elevator.direction = "DOWN"
                ELSE IF Elevator.goingToFloor > Elevator.currentFloor
                    Elevator.direction = "UP"
                ENDIF
                RESTART SEQUENCE "operate"
            ENDIF
        ENDSEQUENCE
    ENDDEFINE

    SEQUENCE "createElevatorList" USING elevator_amount, lowFloor, highFloor
        FOR i = 1 WHILE i <= Columm.elevator_amount, 
            SET Elevator_i TO INSTANTIATE Elevator WITH elevator_ID : i, status : Online, lowFloor : lowFloor, highFloor : highFloor THEN 
            increment i
        ENDFOR
    ENDSEQUENCE

    DEFINE Floor USING id:
    floor_ID: id,
    buttonUp : FALSE, 
    buttonDown : FALSE, 
    upLight : FALSE, 
    downLight : FALSE, 
    floorDoorClose : TRUE,
    floorDoorOpen : FALSE,

    SEQUENCE "createFloorList" USING maximumFloorNumber
        FOR i = 1 WHILE i <= Columm.maximumFloorNumber, 
            SET Floor_i TO INSTANTIATE Floor WITH floor_ID : i THEN 
            increment i
        ENDFOR
    ENDSEQUENCE
    
    SEQUENCE "Delegate" USING queue_FloorRequestUP, queue_FloorRequestDOWN, Floor.buttonUp, Floor.buttonDown, Floor.floor_ID
        IF user press Floor.buttonUp THEN
            SET resultArray as an ARRAY
            SET scoreArray as an ARRAY
            SET bestElevatorID as an INT
            FOR i = 1 REPEAT-UNTIL i = Columm.elevator_amount
                IF Elevator_#i.direction = "UP" AND Elevator_#i.currentFloor < Floor.floor_ID
                    ADD Elevator_#i.ID to resultArray
                    ADD |Elevator_#i.currentFloor - Floor.floor_ID| to scoreArray '|x| is use to make value absolute (remove negatives)'
                ENDIF
                increment i
            ENDFOR
            IF resultArray.Length = 0 THEN
                FOR j = 1 REPEAT-UNTIL j = Columm.elevator_amount
                    IF Elevator_#j.direction = "IDLE"
                        ADD Elevator_#j.ID to resultArray
                        ADD |Elevator_#j.currentFloor - Floor.floor_ID| to scoreArray THEN '|x| is use to make value absolute (remove negatives)'
                    ENDIF
                    increment j
                ENDFOR
            ENDIF             
            IF resultArray.Length = 0 THEN
                ADD floor_ID to queue_FloorRequestDOWN
            ELSE THEN
                SET minimum = READ first number in scoreArray;
                SET location = 0
                FOR k = 1 REPEAT-UNTIL k < scoreArray.size
                    IF scoreArray position k < minimum
                        SET minimum = scoreArray position k
                        SET location = k
                        INCREMENT k
                    ENDIF
                    RETURN bestElevatorID = ResultArray[location] 'AKA Elevator_i.ID'
                ENDFOR
                ADD Floor.floor_ID to Elevator_#bestElevatorID.queueToFloor
            ENDIF
        ELSE IF user press Floor.buttonDown THEN
            SET resultArray as an ARRAY
            SET scoreArray as an ARRAY
            SET bestElevatorID as an INT
            FOR i = 1 REPEAT-UNTIL i = Columm.elevator_amount
                IF Elevator_#i.direction = "DOWN" AND Elevator_#i.currentFloor > Floor.floor_ID
                    ADD Elevator_#i.ID to resultArray
                    ADD |Elevator_#i.currentFloor - Floor.floor_ID| to scoreArray '|x| is use to make value absolute (remove negatives)'
                ENDIF
                increment i
            ENDFOR
            IF resultArray.Length = 0 THEN
                FOR j = 1 REPEAT-UNTIL j = Columm.elevator_amount
                    IF Elevator_#j.direction = "IDLE"
                        ADD Elevator_#j.ID to resultArray
                        ADD |Elevator_#j.currentFloor - Floor.floor_ID| to scoreArray THEN '|x| is use to make value absolute (remove negatives)'
                    ENDIF
                    increment j
                ENDFOR
            ENDIF    
            IF resultArray.Length = 0 THEN
                ADD floor_ID to queue_FloorRequestDOWN
            ENDIF
            IF resultArray.length > 0 THEN
                SET minimum = array[0];
                SET location = 0
                FOR k = 1 REPEAT-UNTIL k < scoreArray.size
                    IF scoreArray position k < minimum
                        SET minimum = scoreArray position k
                        SET location = k
                        INCREMENT k
                    ENDIF
                    RETURN bestElevatorID = ResultArray[location] 'AKA Elevator_i.ID'
                ENDFOR
                ADD Floor.floor_ID to Elevator_#bestElevatorID.queueToFloor
            ENDIF
        ENDIF

        WHEN Elevator.direction switch direction
            IF Elevator.direction = "UP"
            ADD Column.queue_FloorRequestUP to Elevator.queueToFloor
            ELSE IF Elevator.direction = "DOWN"
            ADD Column.queue_FloorRequestDOWN to Elevator.queueToFloor
    ENDSEQUENCE

    SEQUENCE "Halt" USING powered OR emergencyButtonPushed
        IF Elevator.emergencyButtonPushed = TRUE THEN
            SET Column status TO offline
        ENDIF

        IF Column.powered = FALSE THEN
            SET Column status TO offline
        ENDIF    
    ENDSEQUENCE

ENDDEFINE
    
SET Column1 TO INSTANTIATE Column WITH column_ID : 1, totalfloor_quantity: 10, lowFloor: 1, highFloor:10   elevator_amount : 2

Each Elevator CALL "operate"

IF Elevator.emergencyButtonPushed = TRUE THEN
    SET Column status TO offline
ENDIF

IF Column.powered = FALSE THEN
    SET Column status TO offline
ENDIF    
